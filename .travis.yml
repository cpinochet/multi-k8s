sudo: required
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - curl https://sdk.cloud.google.com > install_google_cloud_sdk.sh
  - /bin/bash install_google_cloud_sdk.sh --disable-prompts
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl --quiet
  - echo $SERVICE_ACCOUNT | base64 -d
#  - gcloud auth activate-service-account --key-file service-account.json
#  - gcloud config set project eco-shift-326816
#  - gcloud config set compute/zone us-central1-a
#  - gcloud container clusters list 
#  - gcloud container clusters get-credentials multi-cluster
#  - kubectl get nodes
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USENAME" --password-stdin
  - docker build -t cpinochet/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true cpinochet/react-test npm test

after_success:
  - echo "Travis_Job id is $TRAVIS_JOB_ID"
  - echo "Travis_commit is $TRAVIS_COMMIT"
  - STC=`echo ${TRAVIS_COMMIT::7}`
  - export $STC
  - echo $STC
  - echo "Travis_pull_requet_sha is $TRAVIS_PULL_REQUEST_SHA"
  - echo "Building Docker Images..."
  - docker build -t cpinochet/multi-client:${STC} -f ./client/Dockerfile ./client
  - docker build -t cpinochet/multi-server:${STC} -f ./server/Dockerfile ./server
  - docker build -t cpinochet/multi-worker:${STC} -f ./worker/Dockerfile ./worker
  - docker tag cpinochet/multi-client:${STC} cpinochet/multi-client:latest
  - docker push cpinochet/multi-client:${STC}
  - docker push cpinochet/multi-client:latest
  - docker tag cpinochet/multi-server:${STC} cpinochet/multi-server:latest
  - docker push cpinochet/multi-server:${STC}
  - docker push cpinochet/multi-server:latest
  - docker tag cpinochet/multi-worker:${STC} cpinochet/multi-worker:latest
  - docker push cpinochet/multi-worker:${STC}
  - docker push cpinochet/multi-worker:latest
  - echo "Updating multi-client deployment manifest"
  - CURRENT_TAG=$(grep 'multi-client' k8s/client-deployment.yaml | awk -F ":" '{print $3}')
  - echo $CURRENT_TAG
  - sed -i -r 's/'":$CURRENT_TAG"'/'":$STC"'/g' k8s/client-deployment.yaml
  - cat k8s/client-deployment.yaml | grep image
  - echo "Updating multi-server deployment manifest"
  - CURRENT_TAG=$(grep 'multi-server' k8s/server-deployment.yaml | awk -F ":" '{print $3}')
  - echo $CURRENT_TAG
  - sed -i -r 's/'":$CURRENT_TAG"'/'":$STC"'/g' k8s/server-deployment.yaml
  - cat k8s/server-deployment.yaml | grep image
  - echo "Updating multi-worker deployment manifest"
  - CURRENT_TAG=$(grep 'multi-worker' k8s/worker-deployment.yaml | awk -F ":" '{print $3}')
  - echo $CURRENT_TAG
  - sed -i -r 's/'":$CURRENT_TAG"'/'":$STC"'/g' k8s/worker-deployment.yaml
  - cat k8s/worker-deployment.yaml | grep image
  - echo "Starting deploy..."
  # - kubectl apply -f k8s 

deploy:
  provider: script
  script:
    - echo "Hola mundo"
  on:
    branch: master
